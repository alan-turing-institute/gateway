version: '3'
services:

  # api gateway
  nginx:
    build: ./nginx
    restart: always
    ports: 
      - "80:80"
      - "443:443"
    networks:
      - share
    depends_on:
      - frontend
      - auth
      - middleware
      - manager
    # volumes:
      # - /etc/letsencrypt/:/etc/letsencrypt/

  
  # frontend components
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    expose:
      - "80"
    depends_on:
      - manager
      - middleware
      - simulator
    networks:
      - share
    volumes:
      - './frontend/src:/app/src'
      - '/app/node_modules'

  # auth components
  auth:
    build:
      context: auth
      dockerfile: Dockerfile
    expose:
      - "5050"
    volumes:
      - ./auth:/app
    depends_on:
      - auth_database
    environment:
      - FLASK_CONFIGURATION=production
    networks:
      - share
    command: gunicorn -w 3 -b :5050 app:app
  auth_database:
    image: "postgres:latest"
    volumes:
      - auth_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=sg
      - POSTGRES_PASSWORD=sg
      - POSTGRES_DB=sg
    networks:
      - share

 # middleware components
  middleware:
    build:
      context: middleware
      dockerfile: Dockerfile
    restart: always
    expose:
      - "5000"
    volumes:
      - ./middleware:/app
    depends_on:
      - middleware_database
    environment:
      - FLASK_CONFIGURATION=production
    networks:
      - share
    # add gunicorn to handle internal flask threading
    command: gunicorn -w 3 -b :5000 app:app
  
  middleware_database:
    image: "postgres:latest"
    volumes:
      - middleware_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=sg
      - POSTGRES_PASSWORD=sg
      - POSTGRES_DB=sg
    networks:
      - share

  # openfoam components
  manager:
    build:
      context: manager
      dockerfile: Dockerfile
    ports:
      - "10023:22"
    expose:
      - "5010"
    volumes:
      - ./manager:/app
    environment:
      - FLASK_CONFIGURATION=production
      - STORAGE_ACCOUNT_NAME
      - STORAGE_ACCOUNT_KEY
    depends_on:
      - middleware
      - simulator
    networks:
      - share
    command: gunicorn -w 3 -b :5010 app:app
  simulator:
    build:
      context: simulator
      dockerfile: Dockerfile
    # here we use the keys from the manager
    env_file:
      - manager/keys/simulator.env
    ports:
      - "10022:22"
    privileged: true
    volumes:
      - ./simulator:/app
    networks:
      - share

networks:
  share:
    driver: bridge
volumes:
  auth_volume:
  middleware_volume:
